---
AWSTemplateFormatVersion: "2010-09-09"
Description: "TaskManager Application Infrastructure Template - Includes API, web, and DNS components"

Parameters:
  # Common parameters
  TemplateBucket:
    Type: String
    Description: S3 bucket name containing the CloudFormation templates

  GitHubActionsUserArn:
    Type: String
    Description: ARN of the GitHub Actions IAM user

  BranchName:
    Type: String
    Description: Branch name for resource naming

  # Google OAuth parameters
  GoogleOAuthClientId:
    Type: String
    Description: Google OAuth Client ID
    NoEcho: true

  GoogleOAuthClientSecret:
    Type: String
    Description: Google OAuth Client Secret
    NoEcho: true

  # Web parameters
  WebContainerImage:
    Type: String
    Description: "Container image URI for the web application"

  DeploymentToken:
    Type: String
    Default: "default"
    Description: "Deployment token to force task definition updates"

  DomainName:
    Type: String
    Default: "appcloud.systems"
    Description: "Domain name for SSL certificate"

  HostedZoneId:
    Type: String
    Description: "Route 53 hosted zone ID for the domain"

  # DNS parameters (for secondary region)
  PrimaryRegion:
    Type: String
    Default: ""
    Description: "Primary region for DNS failover"

  PrimaryWebLoadBalancerDNS:
    Type: String
    Default: ""
    Description: "DNS name of the primary web load balancer"

  PrimaryWebLoadBalancerHostedZoneId:
    Type: String
    Default: ""
    Description: "Hosted zone ID of the primary web load balancer"

  # Backend outputs as parameters
  SharedLambdaRoleArn:
    Type: String
    Description: ARN of the shared Lambda role

  DatabaseHost:
    Type: String
    Description: Database host endpoint

  DatabaseUsername:
    Type: String
    Description: Database username

  DatabaseEngine:
    Type: String
    Description: Database engine

  DatabasePort:
    Type: String
    Description: Database port

  DatabaseName:
    Type: String
    Description: Database name

  DatabaseClusterArn:
    Type: String
    Description: Database cluster ARN

  DatabasePasswordSecretArn:
    Type: String
    Description: Database password secret ARN

  VPCId:
    Type: String
    Description: VPC ID

  PrivateSubnet1Id:
    Type: String
    Description: Private subnet 1 ID

  PrivateSubnet2Id:
    Type: String
    Description: Private subnet 2 ID

  PublicSubnet1Id:
    Type: String
    Description: Public subnet 1 ID

  PublicSubnet2Id:
    Type: String
    Description: Public subnet 2 ID

  LambdaSecurityGroupId:
    Type: String
    Description: Lambda security group ID

  ALBSecurityGroupId:
    Type: String
    Description: ALB security group ID

  ECSTaskSecurityGroupId:
    Type: String
    Description: ECS task security group ID

  ECSClusterName:
    Type: String
    Description: ECS cluster name

  GoogleOAuthSecretArn:
    Type: String
    Description: ARN of the Google OAuth secrets

  # Region-specific parameters
  IsPrimaryRegion:
    Type: String
    AllowedValues: ["true", "false"]
    Description: Whether this region hosts the primary cluster

Conditions:
  IsPrimarySingleRegion: !And [
      !Equals [!Ref IsPrimaryRegion, "true"],
      !Equals ["false", "false"], # Since EnableGlobalCluster is not here, but for single region it's false
    ]
  IsSecondary: !Equals [!Ref IsPrimaryRegion, "false"]

Resources:
  # Regional API
  ApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./api.template
      Parameters:
        Environment: !Ref BranchName
        SharedLambdaRoleArn: !Ref SharedLambdaRoleArn
        DatabaseHost: !Ref DatabaseHost
        DatabaseUsername: !Ref DatabaseUsername
        DatabaseEngine: !Ref DatabaseEngine
        DatabasePort: !Ref DatabasePort
        DatabaseName: !Ref DatabaseName
        DatabaseClusterArn: !Ref DatabaseClusterArn
        LambdaSecurityGroupId: !Ref LambdaSecurityGroupId
        PrivateSubnet1Id: !Ref PrivateSubnet1Id
        PrivateSubnet2Id: !Ref PrivateSubnet2Id
        LogRetentionDays: 7

  # Regional Web
  WebStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./web.template
      Parameters:
        Environment: !Ref BranchName
        WebContainerImage: !Ref WebContainerImage
        DeploymentToken: !Ref DeploymentToken
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
        SharedLambdaRoleArn: !Ref SharedLambdaRoleArn
        VPCId: !Ref VPCId
        ALBSecurityGroupId: !Ref ALBSecurityGroupId
        ECSTaskSecurityGroupId: !Ref ECSTaskSecurityGroupId
        PublicSubnet1Id: !Ref PublicSubnet1Id
        PublicSubnet2Id: !Ref PublicSubnet2Id
        PrivateSubnet1Id: !Ref PrivateSubnet1Id
        PrivateSubnet2Id: !Ref PrivateSubnet2Id
        ECSClusterName: !Ref ECSClusterName
        GoogleOAuthSecretArn: !Ref GoogleOAuthSecretArn
        DatabaseHost: !Ref DatabaseHost
        DatabaseUsername: !Ref DatabaseUsername
        DatabaseEngine: !Ref DatabaseEngine
        DatabasePort: !Ref DatabasePort
        DatabaseName: !Ref DatabaseName
        DatabaseClusterArn: !Ref DatabaseClusterArn
        DatabasePasswordSecretArn: !Ref DatabasePasswordSecretArn
        LogRetentionDays: 7

  # DNS for primary region (simple record for single region)
  PrimaryDnsStack:
    Condition: IsPrimarySingleRegion
    Type: AWS::CloudFormation::Stack
    DependsOn: WebStack
    Properties:
      TemplateURL: ./dns.template
      Parameters:
        Environment: !Ref BranchName
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
        PrimaryRegion: !Ref "AWS::Region"
        PrimaryWebLoadBalancerDNS: !GetAtt WebStack.Outputs.WebLoadBalancerDNS
        PrimaryWebLoadBalancerHostedZoneId: !GetAtt WebStack.Outputs.WebLoadBalancerHostedZoneId
        SecondaryWebLoadBalancerDNS: !Ref "AWS::NoValue"
        SecondaryWebLoadBalancerHostedZoneId: !Ref "AWS::NoValue"

  # Global DNS (only in secondary region - failover setup)
  SecondaryDnsStack:
    Condition: IsSecondary
    Type: AWS::CloudFormation::Stack
    DependsOn: WebStack
    Properties:
      TemplateURL: ./dns.template
      Parameters:
        Environment: !Ref BranchName
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
        PrimaryRegion: !Ref PrimaryRegion
        SecondaryRegion: !Ref "AWS::Region"
        PrimaryWebLoadBalancerDNS: !Ref PrimaryWebLoadBalancerDNS
        PrimaryWebLoadBalancerHostedZoneId: !Ref PrimaryWebLoadBalancerHostedZoneId
        SecondaryWebLoadBalancerDNS: !GetAtt WebStack.Outputs.WebLoadBalancerDNS
        SecondaryWebLoadBalancerHostedZoneId: !GetAtt WebStack.Outputs.WebLoadBalancerHostedZoneId

Outputs:
  # API outputs
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !GetAtt ApiStack.Outputs.ApiEndpoint

  ApiLambdaFunctionName:
    Description: "API Lambda function name"
    Value: !GetAtt ApiStack.Outputs.ApiLambdaFunctionName

  # Web outputs
  WebEndpoint:
    Description: "Web application endpoint URL"
    Value: !GetAtt WebStack.Outputs.WebEndpoint

  WebLoadBalancerDNS:
    Description: "Web Load Balancer DNS name"
    Value: !GetAtt WebStack.Outputs.WebLoadBalancerDNS

  WebLoadBalancerHostedZoneId:
    Description: "Web Load Balancer hosted zone ID"
    Value: !GetAtt WebStack.Outputs.WebLoadBalancerHostedZoneId

  WebTaskDefinition:
    Description: "Web ECS task definition"
    Value: !GetAtt WebStack.Outputs.WebTaskDefinition

  WebServiceName:
    Description: "Web ECS service name"
    Value: !GetAtt WebStack.Outputs.WebServiceName

  # DNS outputs for primary region (single region only)
  PrimaryWebEndpoint:
    Condition: IsPrimarySingleRegion
    Description: "Web application endpoint URL"
    Value: !GetAtt PrimaryDnsStack.Outputs.WebEndpoint

  # DNS outputs for secondary region (failover setup)
  SecondaryWebEndpoint:
    Condition: IsSecondary
    Description: "Web application endpoint URL"
    Value: !GetAtt SecondaryDnsStack.Outputs.WebEndpoint

  PrimaryHealthCheckId:
    Condition: IsPrimarySingleRegion
    Description: "Primary health check ID"
    Value: !GetAtt PrimaryDnsStack.Outputs.PrimaryHealthCheckId

  PrimaryHealthCheckIdSecondary:
    Condition: IsSecondary
    Description: "Primary health check ID"
    Value: !GetAtt SecondaryDnsStack.Outputs.PrimaryHealthCheckId

  SecondaryHealthCheckId:
    Condition: IsSecondary
    Description: "Secondary health check ID"
    Value: !GetAtt SecondaryDnsStack.Outputs.SecondaryHealthCheckId
