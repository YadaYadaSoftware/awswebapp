---
AWSTemplateFormatVersion: 2010-09-09
Description: TaskManager KMS Key and Replica Infrastructure

Parameters:
  GitHubActionsUserArn:
    Type: String
    Description: ARN of the GitHub Actions IAM user

  BranchName:
    Type: String
    Description: Branch name for resource naming

  KmsKeyArn:
    Type: String
    Description: ARN of the primary KMS key to create a replica from (optional)
    Default: ""

  IsPrimaryRegion:
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"
    Description: Whether this region hosts the primary cluster

Conditions:
  IsPrimaryKey: !Equals [!Ref KmsKeyArn, ""]
  IsReplicaKey: !Not [!Equals [!Ref KmsKeyArn, ""]]
  IsPrimary: !Equals [!Ref IsPrimaryRegion, "true"]

Resources:
  AuroraKmsKey:
    Type: AWS::KMS::Key
    Condition: IsPrimaryKey
    DeletionPolicy: Retain
    Properties:
      Description: !Sub "Multi-region KMS key for Aurora Global Database encryption - ${BranchName}"
      KeyUsage: ENCRYPT_DECRYPT
      KeySpec: SYMMETRIC_DEFAULT
      MultiRegion: true
      Enabled: true
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: EnableIAMUserPermissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: kms:*
            Resource: "*"
          - Sid: AllowRDSService
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action:
              - kms:CreateGrant
              - kms:DescribeKey
              - kms:Decrypt
              - kms:Encrypt
              - kms:GenerateDataKey
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:RetireGrant
            Resource: "*"
          - Sid: AllowGitHubActionsUser
            Effect: Allow
            Principal:
              AWS: !Ref GitHubActionsUserArn
            Action:
              - kms:CreateKey
              - kms:DescribeKey
              - kms:CreateGrant
              - kms:Decrypt
              - kms:Encrypt
              - kms:GenerateDataKey
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:RetireGrant
              - kms:CreateAlias
              - kms:DeleteAlias
              - kms:UpdateAlias
              - kms:ListAliases
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: "*"
      Tags:
        - Key: LogicalId
          Value: AuroraKmsKey
        - Key: Stack
          Value: !Ref "AWS::StackName"

  AuroraKmsKeyReplica:
    Type: AWS::KMS::ReplicaKey
    Condition: IsReplicaKey
    DeletionPolicy: Retain
    Properties:
      Description: !Sub "KMS key replica for Aurora Global Database encryption - ${BranchName}"
      PrimaryKeyArn: !Ref KmsKeyArn
      Enabled: true
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: EnableIAMUserPermissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: kms:*
            Resource: "*"
          - Sid: AllowRDSService
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action:
              - kms:CreateGrant
              - kms:DescribeKey
              - kms:Decrypt
              - kms:Encrypt
              - kms:GenerateDataKey
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:RetireGrant
            Resource: "*"
          - Sid: AllowGitHubActionsUser
            Effect: Allow
            Principal:
              AWS: !Ref GitHubActionsUserArn
            Action:
              - kms:CreateKey
              - kms:DescribeKey
              - kms:CreateGrant
              - kms:Decrypt
              - kms:Encrypt
              - kms:GenerateDataKey
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:RetireGrant
              - kms:CreateAlias
              - kms:DeleteAlias
              - kms:UpdateAlias
              - kms:ListAliases
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: "*"
      Tags:
        - Key: LogicalId
          Value: AuroraKmsKeyReplica
        - Key: Stack
          Value: !Ref "AWS::StackName"

  SharedLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub TaskManager-Shared-Lambda-Role-${BranchName}-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource:
                  - !Sub arn:aws:secretsmanager:*:${AWS::AccountId}:secret:taskmanager/database/regional/*
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:*:${AWS::AccountId}:*
        - PolicyName: RDSAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - rds:CreateDBCluster
                  - rds:ModifyDBCluster
                  - rds:DeleteDBCluster
                  - rds:DescribeDBClusters
                  - rds:DescribeDBInstances
                  - rds:DescribeGlobalClusters
                  - rds:ModifyGlobalCluster
                  - rds:DeleteGlobalCluster
                  - rds-data:ExecuteStatement
                  - rds-data:BatchExecuteStatement
                Resource:
                  - !Sub arn:aws:rds:*:${AWS::AccountId}:cluster:taskmanager-*
                  - !Sub arn:aws:rds::${AWS::AccountId}:global-cluster:taskmanager-global-cluster
        - PolicyName: KMSAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:CreateKey
                  - kms:DescribeKey
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                  - kms:ReEncryptFrom
                  - kms:ReEncryptTo
                  - kms:RetireGrant
                  - kms:CreateAlias
                  - kms:DeleteAlias
                  - kms:UpdateAlias
                  - kms:ListAliases
                  - kms:ListGrants
                  - kms:RevokeGrant
                  - kms:ReplicateKey
                  - kms:DisableKey
                  - kms:ScheduleKeyDeletion
                Resource: "*"
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - "arn:aws:ssm:*:*:parameter/aws/service/ami-amazon-linux-latest/*"
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: "*"
      Tags:
        - Key: LogicalId
          Value: SharedLambdaExecutionRole
        - Key: Stack
          Value: !Ref "AWS::StackName"

Outputs:
  AuroraKmsKeyArn:
    Description: ARN of the KMS key (primary or replica)
    Value:
      !If [
        IsPrimaryKey,
        !GetAtt AuroraKmsKey.Arn,
        !GetAtt AuroraKmsKeyReplica.Arn,
      ]
    Export:
      Name: !Sub "taskmanager-${BranchName}-AuroraKmsKeyArn-${AWS::Region}"

  SharedLambdaRoleArn:
    Description: Shared Lambda execution role ARN
    Value: !GetAtt SharedLambdaExecutionRole.Arn
    Export:
      Name: !Sub "taskmanager-${BranchName}-SharedLambdaRoleArn-${AWS::Region}"
