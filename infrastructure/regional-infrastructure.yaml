---
AWSTemplateFormatVersion: "2010-09-09"
Description: "TaskManager Regional Infrastructure - VPC, RDS, ECS, Bastion Host"

Parameters:
  DatabasePassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: "Password for the Aurora MySQL database"

  EngineVersion:
    Type: String
    Description: "Aurora MySQL engine version for the regional cluster"

  BastionPublicKeyMaterial:
    Type: String
    Description: "Public key material for bastion SSH access (generate locally with ssh-keygen and paste the .pub content here)"
    Default: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCuSPS013ezN5lbrX/yOgu2d5n+97vzyj0P7oD2n5mCyblEG184U6r0LOu+DWURveDTLOtBEUCa5cCfnW3vTd6A25t9fHJFB0V+DuOCQ+tMVLxvs3yu61Cmz4ChNEK/qUX9YtpDwXJP1SmnKUPJOnFAfUwyClBqbQjd6rkyYYKmuRLD3llEXZDO/GwLpWO3KvNWLYJnz+MAJL4LU1JXimYfJqVmd3PUGUyUI55d5lqfZYCGxwzb3Eg31bZ4ljf0vBT6ztgwrVvBvpRlkmTRqcqvypS/3zDd6USmf8rLOB5VwnFw+f4o88K1x3O5iqZrRxApjdlLA8IDIH7uFP89KjKX 17034@DESKTOP-3BGTTVG"

  BastionRoleArn:
    Type: String
    Description: "ARN of the bastion role from global stack"

  BastionInstanceProfileArn:
    Type: String
    Description: "ARN of the bastion instance profile from global stack"

  AuroraGlobalClusterId:
    Type: String
    Description: "ID of the Aurora global cluster from global stack"

  AuroraKmsKeyArn:
    Type: String
    Description: "ARN of the KMS key used by the Aurora global cluster"

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"
    Description: "Latest Amazon Linux 2023 AMI ID from SSM Parameter Store"

  # Parameters from regional-db.yaml outputs
  VPCId:
    Type: String
    Description: "VPC ID from regional-db stack"

  PrivateSubnet1Id:
    Type: String
    Description: "Private subnet 1 ID from regional-db stack"

  PrivateSubnet2Id:
    Type: String
    Description: "Private subnet 2 ID from regional-db stack"

  PublicSubnet1Id:
    Type: String
    Description: "Public subnet 1 ID from regional-db stack"

  PublicSubnet2Id:
    Type: String
    Description: "Public subnet 2 ID from regional-db stack"

  LambdaSecurityGroupId:
    Type: String
    Description: "Lambda security group ID from regional-db stack"

  RDSSecurityGroupId:
    Type: String
    Description: "RDS security group ID from regional-db stack"

  BastionSecurityGroupId:
    Type: String
    Description: "Bastion security group ID from regional-db stack"

  ALBSecurityGroupId:
    Type: String
    Description: "ALB security group ID from regional-db stack"

  ECSTaskSecurityGroupId:
    Type: String
    Description: "ECS task security group ID from regional-db stack"

  DatabaseEndpoint:
    Type: String
    Description: "Database endpoint from regional-db stack"

  DatabaseReaderEndpoint:
    Type: String
    Description: "Database reader endpoint from regional-db stack"

  SharedLambdaRoleArn:
    Type: String
    Description: "ARN of the shared Lambda role from global stack"

Resources:
  # ECR Repository for Web Application
  WebECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: "taskmanager-web"
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: "MUTABLE"
      Tags:
        - Key: Name
          Value: "TaskManager-Web-ECR"
        - Key: Purpose
          Value: "Container Registry"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Note: Bastion IAM role cleanup is handled by the global stack's IAM cleanup function
  # The BastionRole is created in the global stack and cleaned up there

  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: "TaskManager-Cluster"
      Tags:
        - Key: Name
          Value: "TaskManager-ECS-Cluster"
        - Key: Purpose
          Value: "Regional Infrastructure"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # SSH Key Pair for Bastion
  BastionKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Sub "taskmanager-bastion-key-${AWS::StackName}-updated"
      KeyType: rsa
      KeyFormat: pem
      PublicKeyMaterial: !Ref BastionPublicKeyMaterial

  # Bastion Instance Profile (using global)

  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t3.micro
      SubnetId: !Ref PublicSubnet1Id
      SecurityGroupIds:
        - !Ref BastionSecurityGroupId
      IamInstanceProfile: !Ref BastionInstanceProfileArn
      KeyName: !Ref BastionKeyPair
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y mysql

          # Create connection helper script
          cat > /home/ec2-user/connect-to-db.sh << 'EOF'
          #!/bin/bash
          echo "TaskManager Aurora MySQL Database Connection Helper"
          echo "Aurora Endpoint: ${DatabaseEndpoint}"
          echo ""
          echo "To connect to Aurora MySQL database:"
          echo "mysql -h ${DatabaseEndpoint} -u taskmanager_admin -p"
          echo ""
          echo "Available databases:"
          echo "- Connect and run: SHOW DATABASES; to list all databases"
          echo "- Each branch creates its own database (e.g., taskmanager_main, taskmanager_feature1)"
          echo ""
          echo "Note: This is a cluster in the Aurora Global Database"
          EOF

          chmod +x /home/ec2-user/connect-to-db.sh
          chown ec2-user:ec2-user /home/ec2-user/connect-to-db.sh
      Tags:
        - Key: Name
          Value: "TaskManager-Bastion"
        - Key: Purpose
          Value: "Regional Infrastructure"
        - Key: Stack
          Value: !Ref "AWS::StackName"

Outputs:
  BastionHostIP:
    Description: "Bastion host public IP address"
    Value: !GetAtt BastionHost.PublicIp
    Export:
      Name: "TaskManager-BastionIP"

  BastionHostId:
    Description: "Bastion host instance ID"
    Value: !Ref BastionHost
    Export:
      Name: "TaskManager-BastionHostId"

  BastionKeyPairName:
    Description: "Name of the SSH key pair for bastion access"
    Value: !Ref BastionKeyPair
    Export:
      Name: "TaskManager-BastionKeyPairName"

  DatabaseTunnelCommand:
    Description: "SSH tunnel command for Aurora MySQL database access"
    Value: !Sub
      - "ssh -i your-key.pem -L 3306:${DbEndpoint}:3306 ec2-user@${BastionIp}"
      - DbEndpoint: !Ref DatabaseEndpoint
        BastionIp: !GetAtt BastionHost.PublicIp
    Export:
      Name: "TaskManager-DatabaseTunnelCommand"

  ECSClusterName:
    Description: "ECS cluster name"
    Value: !GetAtt ECSCluster.Arn
    Export:
      Name: "TaskManager-ECSCluster"

  WebECRRepositoryUri:
    Description: "ECR repository URI for web application"
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/taskmanager-web"
    Export:
      Name: "TaskManager-WebECRRepositoryUri"
