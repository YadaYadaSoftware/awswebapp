---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Regional S3 bucket, ECR, VPC, subnets, and security groups setup"

Parameters:
  BranchName:
    Type: String
    Description: "Branch name for resource naming"
  VPCFlowLogsRoleArn:
    Type: String
    Description: ARN of the VPC Flow Logs IAM role from global stack
  LogRetentionDays:
    Type: Number
    Default: 7
    Description: Number of days to retain CloudWatch logs

Resources:
  RegionalArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "taskmanager-${BranchName}-templates-bucket-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: LogicalId
          Value: RegionalArtifactsBucket
        - Key: Name
          Value: "TaskManager-Templates-Bucket"
        - Key: Purpose
          Value: "CloudFormation Templates and Lambda Layers"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  WebECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "taskmanager-${BranchName}-web-${AWS::Region}"
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: "MUTABLE"
      Tags:
        - Key: LogicalId
          Value: WebECRRepository
        - Key: Name
          Value: "TaskManager-Web-ECR"
        - Key: Purpose
          Value: "Container Registry"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # VPC and Networking
  TaskManagerVPC:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: LogicalId
          Value: TaskManagerVPC
        - Key: Name
          Value: "TaskManager-VPC"
        - Key: Purpose
          Value: "Regional Database Infrastructure"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  InternetGateway:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: LogicalId
          Value: InternetGateway
        - Key: Name
          Value: "TaskManager-IGW"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  AttachGateway:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TaskManagerVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets for NAT Gateway
  PublicSubnet1:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: LogicalId
          Value: PublicSubnet1
        - Key: Name
          Value: "TaskManager-Public-Subnet-1"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  PublicSubnet2:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: LogicalId
          Value: PublicSubnet2
        - Key: Name
          Value: "TaskManager-Public-Subnet-2"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Private Subnets for Lambda and RDS
  PrivateSubnet1:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: LogicalId
          Value: PrivateSubnet1
        - Key: Name
          Value: "TaskManager-Private-Subnet-1"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  PrivateSubnet2:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: LogicalId
          Value: PrivateSubnet2
        - Key: Name
          Value: "TaskManager-Private-Subnet-2"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # NAT Gateway for private subnet internet access
  NATGateway1EIP:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: LogicalId
          Value: NATGateway1EIP
        - Key: Stack
          Value: !Ref "AWS::StackName"

  NATGateway1:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: LogicalId
          Value: NATGateway1
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Route Tables
  PublicRouteTable:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TaskManagerVPC
      Tags:
        - Key: LogicalId
          Value: PublicRouteTable
        - Key: Name
          Value: "TaskManager-Public-RT"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  DefaultPublicRoute:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TaskManagerVPC
      Tags:
        - Key: LogicalId
          Value: PrivateRouteTable
        - Key: Name
          Value: "TaskManager-Private-RT"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  DefaultPrivateRoute:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1

  PrivateSubnet1RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  # Security Groups
  LambdaSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda functions
      VpcId: !Ref TaskManagerVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: LogicalId
          Value: LambdaSecurityGroup
        - Key: Name
          Value: "TaskManager-Lambda-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  ECSTaskSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS tasks
      VpcId: !Ref TaskManagerVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
          Description: HTTP access from ALB
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: LogicalId
          Value: ECSTaskSecurityGroup
        - Key: Name
          Value: "TaskManager-ECS-Task-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  ALBSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Application Load Balancer
      VpcId: !Ref TaskManagerVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP access from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access from anywhere
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: LogicalId
          Value: ALBSecurityGroup
        - Key: Name
          Value: "TaskManager-ALB-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  RDSSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Aurora MySQL Serverless
      VpcId: !Ref TaskManagerVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref LambdaSecurityGroup
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref ECSTaskSecurityGroup
      Tags:
        - Key: LogicalId
          Value: RDSSecurityGroup
        - Key: Name
          Value: "TaskManager-Aurora-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # VPC Flow Logs
  VPCFlowLogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vpc/flowlogs/TaskManager-${BranchName}-VPC-${AWS::Region}"
      RetentionInDays: !Ref LogRetentionDays
      Tags:
        - Key: LogicalId
          Value: VPCFlowLogsLogGroup
        - Key: Stack
          Value: !Ref "AWS::StackName"

  VPCFlowLogs:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::FlowLog
    Properties:
      ResourceId: !Ref TaskManagerVPC
      ResourceType: VPC
      TrafficType: ALL
      DeliverLogsPermissionArn: !Ref VPCFlowLogsRoleArn
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref VPCFlowLogsLogGroup
      Tags:
        - Key: LogicalId
          Value: VPCFlowLogs
        - Key: Stack
          Value: !Ref "AWS::StackName"

Outputs:
  VPCId:
    Description: VPC ID for regional database
    Value: !Ref TaskManagerVPC

  PrivateSubnet1Id:
    Description: Private subnet 1 ID
    Value: !Ref PrivateSubnet1

  PrivateSubnet2Id:
    Description: Private subnet 2 ID
    Value: !Ref PrivateSubnet2

  PublicSubnet1Id:
    Description: Public subnet 1 ID
    Value: !Ref PublicSubnet1

  PublicSubnet2Id:
    Description: Public subnet 2 ID
    Value: !Ref PublicSubnet2

  LambdaSecurityGroupId:
    Description: Security group for Lambda functions
    Value: !Ref LambdaSecurityGroup

  ALBSecurityGroupId:
    Description: Security group for Application Load Balancer
    Value: !Ref ALBSecurityGroup

  ECSTaskSecurityGroupId:
    Description: Security group for ECS tasks
    Value: !Ref ECSTaskSecurityGroup

  RDSSecurityGroupId:
    Description: Security group for RDS access
    Value: !Ref RDSSecurityGroup