---
AWSTemplateFormatVersion: 2010-09-09
Description: TaskManager Global Infrastructure - IAM, Aurora Global Database,
  Secrets Manager
Parameters:
  DatabasePassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: Password for the Aurora MySQL database
  EngineVersion:
    Type: String
    Description: Aurora MySQL engine version for the global cluster
  GitHubActionsUserArn:
    Type: String
    Description: ARN of the GitHub Actions IAM user from IAM setup stack
Resources:
  BastionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub TaskManager-Bastion-Role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: SecretsManagerRead
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub arn:aws:secretsmanager:us-east-1:${AWS::AccountId}:secret:taskmanager/database/regional/us-east-1*
                  - !Sub arn:aws:secretsmanager:us-east-2:${AWS::AccountId}:secret:taskmanager/database/regional/us-east-2*
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - "arn:aws:ssm:*:*:parameter/aws/service/ami-amazon-linux-latest/*"
      Tags:
        - Key: Stack
          Value: !Ref "AWS::StackName"
  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BastionRole
  AuroraKmsKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    Properties:
      Description: Multi-region KMS key for Aurora Global Database encryption
      KeyUsage: ENCRYPT_DECRYPT
      KeySpec: SYMMETRIC_DEFAULT
      MultiRegion: true
      Enabled: true
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: EnableIAMUserPermissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: kms:*
            Resource: "*"
          - Sid: AllowRDSService
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action:
              - kms:CreateGrant
              - kms:DescribeKey
              - kms:Decrypt
              - kms:Encrypt
              - kms:GenerateDataKey
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:RetireGrant
            Resource: "*"
          - Sid: AllowGitHubActionsUser
            Effect: Allow
            Principal:
              AWS: !Ref GitHubActionsUserArn
            Action:
              - kms:CreateKey
              - kms:DescribeKey
              - kms:CreateGrant
              - kms:Decrypt
              - kms:Encrypt
              - kms:GenerateDataKey
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:RetireGrant
              - kms:CreateAlias
              - kms:DeleteAlias
              - kms:UpdateAlias
              - kms:ListAliases
              - kms:ListGrants
              - kms:RevokeGrant
            Resource: "*"
      Tags:
        - Key: Stack
          Value: !Ref "AWS::StackName"

  AuroraGlobalCluster:
    Type: AWS::RDS::GlobalCluster
    Properties:
      GlobalClusterIdentifier: taskmanager-global-cluster
      Engine: aurora-mysql
      EngineVersion: !Ref EngineVersion
      DeletionProtection: false
      StorageEncrypted: true
      Tags:
        - Key: Stack
          Value: !Ref "AWS::StackName"
  SharedLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub TaskManager-Shared-Lambda-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource:
                  - !Sub arn:aws:secretsmanager:*:${AWS::AccountId}:secret:taskmanager/database/regional/*
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:*:${AWS::AccountId}:*
        - PolicyName: RDSAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - rds:CreateDBCluster
                  - rds:ModifyDBCluster
                  - rds:DeleteDBCluster
                  - rds:DescribeDBClusters
                  - rds:DescribeDBInstances
                  - rds:DescribeGlobalClusters
                  - rds:ModifyGlobalCluster
                  - rds:DeleteGlobalCluster
                  - rds-data:ExecuteStatement
                  - rds-data:BatchExecuteStatement
                Resource:
                  - !Sub arn:aws:rds:*:${AWS::AccountId}:cluster:taskmanager-*
                  - !Sub arn:aws:rds::${AWS::AccountId}:global-cluster:taskmanager-global-cluster
        - PolicyName: KMSAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:CreateKey
                  - kms:DescribeKey
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                  - kms:ReEncryptFrom
                  - kms:ReEncryptTo
                  - kms:RetireGrant
                  - kms:CreateAlias
                  - kms:DeleteAlias
                  - kms:UpdateAlias
                  - kms:ListAliases
                  - kms:ListGrants
                  - kms:RevokeGrant
                  - kms:ReplicateKey
                  - kms:DisableKey
                  - kms:ScheduleKeyDeletion
                Resource: "*"
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - "arn:aws:ssm:*:*:parameter/aws/service/ami-amazon-linux-latest/*"
      Tags:
        - Key: Stack
          Value: !Ref "AWS::StackName"
Outputs:
  BastionRoleArn:
    Description: Bastion role ARN
    Value: !GetAtt BastionRole.Arn
    Export:
      Name: TaskManager-BastionRole
  BastionInstanceProfileArn:
    Description: Bastion instance profile ARN
    Value: !Ref BastionInstanceProfile
    Export:
      Name: TaskManager-BastionInstanceProfile
  AuroraGlobalClusterId:
    Description: Aurora Global Database cluster identifier
    Value: !Ref AuroraGlobalCluster
    Export:
      Name: TaskManager-AuroraGlobalCluster
  AuroraKmsKeyArn:
    Description: KMS key ARN used for Aurora encryption
    Value: !GetAtt AuroraKmsKey.Arn
    Export:
      Name: TaskManager-AuroraKmsKey

  SharedLambdaRoleArn:
    Description: Shared Lambda execution role ARN
    Value: !GetAtt SharedLambdaExecutionRole.Arn
    Export:
      Name: TaskManager-SharedLambdaRole
