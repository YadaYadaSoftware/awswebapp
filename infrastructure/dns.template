---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Global DNS Configuration for Multi-Region Failover"

Parameters:
  Environment:
    Type: String
    Default: main
    Description: "Environment name (typically branch name)"

  DomainName:
    Type: String
    Default: "appcloud.systems"
    Description: "Domain name for SSL certificate"

  HostedZoneId:
    Type: String
    Description: "Route 53 hosted zone ID for the domain"

  PrimaryRegion:
    Type: String
    Default: "us-east-1"
    Description: "Primary region for failover"

  SecondaryRegion:
    Type: String
    Default: "us-east-2"
    Description: "Secondary region for failover"

  PrimaryWebLoadBalancerDNS:
    Type: String
    Description: "DNS name of the primary web load balancer"

  PrimaryWebLoadBalancerHostedZoneId:
    Type: String
    Description: "Hosted zone ID of the primary web load balancer"

  SecondaryWebLoadBalancerDNS:
    Type: String
    Default: ""
    Description: "DNS name of the secondary web load balancer (optional for single region)"

  SecondaryWebLoadBalancerHostedZoneId:
    Type: String
    Default: ""
    Description: "Hosted zone ID of the secondary web load balancer (optional for single region)"

Conditions:
  HasSecondaryLoadBalancer:
    !Not [!Equals [!Ref SecondaryWebLoadBalancerDNS, ""]]
  IsSingleRegion: !Equals [!Ref SecondaryWebLoadBalancerDNS, ""]

Resources:
  # Health Check for Primary ALB
  PrimaryHealthCheck:
    Type: AWS::Route53::HealthCheck
    Properties:
      HealthCheckConfig:
        Type: HTTPS
        ResourcePath: /health
        FullyQualifiedDomainName: !Ref PrimaryWebLoadBalancerDNS
        Port: 443
        RequestInterval: 30
        FailureThreshold: 2
      HealthCheckTags:
        - Key: LogicalId
          Value: PrimaryHealthCheck
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: Primary-Web-Failover

  # Health Check for Secondary ALB (only when secondary load balancer is provided)
  SecondaryHealthCheck:
    Condition: HasSecondaryLoadBalancer
    Type: AWS::Route53::HealthCheck
    Properties:
      HealthCheckConfig:
        Type: HTTPS
        ResourcePath: /health
        FullyQualifiedDomainName: !Ref SecondaryWebLoadBalancerDNS
        Port: 443
        RequestInterval: 30
        FailureThreshold: 2
      HealthCheckTags:
        - Key: LogicalId
          Value: SecondaryHealthCheck
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: Secondary-Web-Failover

  # Primary DNS Record for single region (simple record)
  PrimaryDNSRecordSingle:
    Condition: IsSingleRegion
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${Environment}.${DomainName}"
      Type: A
      AliasTarget:
        DNSName: !Ref PrimaryWebLoadBalancerDNS
        HostedZoneId: !Ref PrimaryWebLoadBalancerHostedZoneId

  # Primary DNS Record for multi-region (failover record)
  PrimaryDNSRecordFailover:
    Condition: HasSecondaryLoadBalancer
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${Environment}.${DomainName}"
      Type: A
      SetIdentifier: !Sub "primary-${Environment}"
      Failover: PRIMARY
      AliasTarget:
        DNSName: !Ref PrimaryWebLoadBalancerDNS
        HostedZoneId: !Ref PrimaryWebLoadBalancerHostedZoneId
      HealthCheckId: !Ref PrimaryHealthCheck

  # Secondary Failover Record (only when secondary load balancer is provided)
  SecondaryDNSRecord:
    Condition: HasSecondaryLoadBalancer
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "${Environment}.${DomainName}"
      Type: A
      SetIdentifier: !Sub "secondary-${Environment}"
      Failover: SECONDARY
      AliasTarget:
        DNSName: !Ref SecondaryWebLoadBalancerDNS
        HostedZoneId: !Ref SecondaryWebLoadBalancerHostedZoneId
      HealthCheckId: !Ref SecondaryHealthCheck

Outputs:
  WebEndpoint:
    Description: "Web application endpoint URL"
    Value: !Sub "https://${Environment}.${DomainName}"
    Export:
      Name: !Sub "taskmanager-${Environment}-WebEndpoint-${SecondaryRegion}"

  PrimaryHealthCheckId:
    Description: "Primary health check ID"
    Value: !Ref PrimaryHealthCheck
    Export:
      Name: !Sub "taskmanager-${Environment}-PrimaryHealthCheckId-${SecondaryRegion}"

  SecondaryHealthCheckId:
    Condition: HasSecondaryLoadBalancer
    Description: "Secondary health check ID"
    Value: !Ref SecondaryHealthCheck
    Export:
      Name: !Sub "taskmanager-${Environment}-SecondaryHealthCheckId-${SecondaryRegion}"
