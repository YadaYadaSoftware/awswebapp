---
AWSTemplateFormatVersion: 2010-09-09
Description: TaskManager Regional Database and Networking Infrastructure - Aurora Clusters, RDS Resources, VPC, Subnets, Security Groups

Parameters:
  DatabasePassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: Password for the Aurora MySQL database

  EngineVersion:
    Type: String
    Description: Aurora MySQL engine version for the regional cluster

  AuroraGlobalClusterId:
    Type: String
    Description: ID of the Aurora global cluster from global stack

  AuroraKmsKeyArn:
    Type: String
    Description: ARN of the KMS key (primary or replica) for Aurora encryption in this region

  IsPrimaryRegion:
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"
    Description: Whether this region hosts the primary cluster

  GitHubActionsUserArn:
    Type: String
    Description: ARN of the GitHub Actions IAM user from IAM setup stack
  BranchName:
    Type: String
    Description: Branch name for resource naming

  VPCFlowLogsRoleArn:
    Type: String
    Description: ARN of the VPC Flow Logs IAM role from global stack

  LogRetentionDays:
    Type: Number
    Default: 7
    Description: Number of days to retain CloudWatch logs

Conditions:
  IsPrimary: !Equals [!Ref IsPrimaryRegion, "true"]
  IsNotPrimary: !Equals [!Ref IsPrimaryRegion, "false"]

Resources:
  # VPC and Networking
  TaskManagerVPC:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: LogicalId
          Value: TaskManagerVPC
        - Key: Name
          Value: "TaskManager-VPC"
        - Key: Purpose
          Value: "Regional Database Infrastructure"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  InternetGateway:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: LogicalId
          Value: InternetGateway
        - Key: Name
          Value: "TaskManager-IGW"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  AttachGateway:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TaskManagerVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets for NAT Gateway
  PublicSubnet1:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: LogicalId
          Value: PublicSubnet1
        - Key: Name
          Value: "TaskManager-Public-Subnet-1"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  PublicSubnet2:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: LogicalId
          Value: PublicSubnet2
        - Key: Name
          Value: "TaskManager-Public-Subnet-2"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Private Subnets for Lambda and RDS
  PrivateSubnet1:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: LogicalId
          Value: PrivateSubnet1
        - Key: Name
          Value: "TaskManager-Private-Subnet-1"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  PrivateSubnet2:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TaskManagerVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: LogicalId
          Value: PrivateSubnet2
        - Key: Name
          Value: "TaskManager-Private-Subnet-2"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # NAT Gateway for private subnet internet access
  NATGateway1EIP:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: LogicalId
          Value: NATGateway1EIP
        - Key: Stack
          Value: !Ref "AWS::StackName"

  NATGateway1:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: LogicalId
          Value: NATGateway1
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Route Tables
  PublicRouteTable:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TaskManagerVPC
      Tags:
        - Key: LogicalId
          Value: PublicRouteTable
        - Key: Name
          Value: "TaskManager-Public-RT"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  DefaultPublicRoute:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TaskManagerVPC
      Tags:
        - Key: LogicalId
          Value: PrivateRouteTable
        - Key: Name
          Value: "TaskManager-Private-RT"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  DefaultPrivateRoute:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1

  PrivateSubnet1RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  # Security Groups
  LambdaSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda functions
      VpcId: !Ref TaskManagerVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: LogicalId
          Value: LambdaSecurityGroup
        - Key: Name
          Value: "TaskManager-Lambda-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  ECSTaskSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ECS tasks
      VpcId: !Ref TaskManagerVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
          Description: HTTP access from ALB
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: LogicalId
          Value: ECSTaskSecurityGroup
        - Key: Name
          Value: "TaskManager-ECS-Task-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  ALBSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Application Load Balancer
      VpcId: !Ref TaskManagerVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP access from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access from anywhere
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: LogicalId
          Value: ALBSecurityGroup
        - Key: Name
          Value: "TaskManager-ALB-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Aurora DB Subnet Group
  # Aurora DB Subnet Group for this region
  AuroraDBSubnetGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet group for Aurora cluster in this region"
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      DBSubnetGroupName: !Sub "taskmanager-${BranchName}-aurora-subnet-group-${AWS::Region}"
      Tags:
        - Key: LogicalId
          Value: AuroraDBSubnetGroup
        - Key: Name
          Value: "TaskManager-Aurora-SubnetGroup"
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Aurora DB Cluster Parameter Group
  AuroraClusterParameterGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Family: aurora-mysql8.0
      Description: "Parameter group for Aurora MySQL cluster"
      Parameters:
        character_set_server: utf8mb4
        collation_server: utf8mb4_unicode_ci
        innodb_buffer_pool_size: "{DBInstanceClassMemory*3/4}"
        max_connections: "200"
        slow_query_log: "1"
        long_query_time: "2"

  # CloudWatch Log Groups for Aurora Cluster
  AuroraAuditLogGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/rds/cluster/taskmanager-${BranchName}-aurora-cluster-${AWS::Region}/audit"
      RetentionInDays: !Ref LogRetentionDays
      Tags:
        - Key: LogicalId
          Value: AuroraAuditLogGroup
        - Key: Stack
          Value: !Ref "AWS::StackName"

  AuroraErrorLogGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/rds/cluster/taskmanager-${BranchName}-aurora-cluster-${AWS::Region}/error"
      RetentionInDays: !Ref LogRetentionDays
      Tags:
        - Key: LogicalId
          Value: AuroraErrorLogGroup
        - Key: Stack
          Value: !Ref "AWS::StackName"

  AuroraGeneralLogGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/rds/cluster/taskmanager-${BranchName}-aurora-cluster-${AWS::Region}/general"
      RetentionInDays: !Ref LogRetentionDays
      Tags:
        - Key: LogicalId
          Value: AuroraGeneralLogGroup
        - Key: Stack
          Value: !Ref "AWS::StackName"

  AuroraSlowQueryLogGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/rds/cluster/taskmanager-${BranchName}-aurora-cluster-${AWS::Region}/slowquery"
      RetentionInDays: !Ref LogRetentionDays
      Tags:
        - Key: LogicalId
          Value: AuroraSlowQueryLogGroup
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Aurora Serverless v2 Cluster
  AuroraCluster:
    DependsOn:
      - AuroraAuditLogGroup
      - AuroraErrorLogGroup
      - AuroraGeneralLogGroup
      - AuroraSlowQueryLogGroup
      - VPCFlowLogsLogGroup
    Type: AWS::RDS::DBCluster
    Properties:
      GlobalClusterIdentifier: !Ref AuroraGlobalClusterId
      DBClusterIdentifier: !Sub "taskmanager-${BranchName}-aurora-cluster-${AWS::Region}"
      Engine: aurora-mysql
      EngineVersion: !Ref EngineVersion
      MasterUsername: !If [IsPrimary, "taskmanager_admin", !Ref "AWS::NoValue"]
      MasterUserPassword:
        !If [IsPrimary, !Ref DatabasePassword, !Ref "AWS::NoValue"]
      DatabaseName: !If [IsPrimary, "taskmanager", !Ref "AWS::NoValue"]
      DBSubnetGroupName: !Ref AuroraDBSubnetGroup
      DBClusterParameterGroupName: !Ref AuroraClusterParameterGroup
      VpcSecurityGroupIds:
        - !Ref RDSSecurityGroup
      BackupRetentionPeriod: 7
      PreferredBackupWindow: "03:00-04:00"
      PreferredMaintenanceWindow: "sun:04:00-sun:05:00"
      StorageEncrypted: true
      KmsKeyId: !Ref AuroraKmsKeyArn
      DeletionProtection: false
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 4
      EnableCloudwatchLogsExports:
        - audit
        - error
        - general
        - slowquery
      Tags:
        - Key: LogicalId
          Value: AuroraCluster
        - Key: Name
          Value: !Sub "TaskManager-Aurora-Cluster-${AWS::Region}"
        - Key: Purpose
          Value: !Sub "${IsPrimaryRegion} Aurora Cluster"
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Aurora Serverless v2 Instance
  AuroraInstance:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub "taskmanager-${BranchName}-aurora-instance-${AWS::Region}"
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: db.serverless
      Engine: aurora-mysql
      PubliclyAccessible: false
      Tags:
        - Key: LogicalId
          Value: AuroraInstance
        - Key: Name
          Value: !Sub "TaskManager-Aurora-Instance-${AWS::Region}"
        - Key: Purpose
          Value: "Regional Aurora Instance"
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # VPC Flow Logs
  VPCFlowLogsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vpc/flowlogs/TaskManager-${BranchName}-VPC-${AWS::Region}"
      RetentionInDays: !Ref LogRetentionDays
      Tags:
        - Key: LogicalId
          Value: VPCFlowLogsLogGroup
        - Key: Stack
          Value: !Ref "AWS::StackName"

  VPCFlowLogs:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::FlowLog
    Properties:
      ResourceId: !Ref TaskManagerVPC
      ResourceType: VPC
      TrafficType: ALL
      DeliverLogsPermissionArn: !Ref VPCFlowLogsRoleArn
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref VPCFlowLogsLogGroup
      Tags:
        - Key: LogicalId
          Value: VPCFlowLogs
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Security Groups
  RDSSecurityGroup:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Aurora MySQL Serverless
      VpcId: !Ref TaskManagerVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref LambdaSecurityGroup
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref ECSTaskSecurityGroup
      Tags:
        - Key: LogicalId
          Value: RDSSecurityGroup
        - Key: Name
          Value: "TaskManager-Aurora-SG"
        - Key: Stack
          Value: !Ref "AWS::StackName"

  # Database Secret
  DatabaseSecret:
    DependsOn: VPCFlowLogsLogGroup
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "taskmanager/database/${BranchName}/regional/${AWS::Region}"
      Description: Database credentials for Aurora Regional Cluster
      SecretString: !Sub |
        {
          "username": "taskmanager_admin",
          "password": "${DatabasePassword}",
          "engine": "aurora-mysql",
          "host": "${AuroraCluster.Endpoint.Address}",
          "port": "${AuroraCluster.Endpoint.Port}",
          "dbname": "taskmanager",
          "cluster_arn": "${AuroraCluster.DBClusterArn}",
          "secret_arn": "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:taskmanager/database/regional/${AWS::Region}"
        }
      Tags:
        - Key: LogicalId
          Value: DatabaseSecret
        - Key: Stack
          Value: !Ref "AWS::StackName"

Outputs:
  VPCId:
    Description: VPC ID for regional database
    Value: !Ref TaskManagerVPC
    Export:
      Name: !Sub "TaskManager-${BranchName}-VPC-${AWS::Region}"

  PrivateSubnet1Id:
    Description: Private subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "TaskManager-${BranchName}-PrivateSubnet1-${AWS::Region}"

  PrivateSubnet2Id:
    Description: Private subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "TaskManager-${BranchName}-PrivateSubnet2-${AWS::Region}"

  PublicSubnet1Id:
    Description: Public subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "TaskManager-${BranchName}-PublicSubnet1-${AWS::Region}"

  PublicSubnet2Id:
    Description: Public subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "TaskManager-${BranchName}-PublicSubnet2-${AWS::Region}"

  LambdaSecurityGroupId:
    Description: Security group for Lambda functions
    Value: !Ref LambdaSecurityGroup
    Export:
      Name: !Sub "TaskManager-${BranchName}-LambdaSecurityGroup-${AWS::Region}"

  ALBSecurityGroupId:
    Description: Security group for Application Load Balancer
    Value: !Ref ALBSecurityGroup
    Export:
      Name: !Sub "TaskManager-${BranchName}-ALBSecurityGroup-${AWS::Region}"

  ECSTaskSecurityGroupId:
    Description: Security group for ECS tasks
    Value: !Ref ECSTaskSecurityGroup
    Export:
      Name: !Sub "TaskManager-${BranchName}-ECSTaskSecurityGroup-${AWS::Region}"

  AuroraClusterId:
    Description: Aurora Regional Cluster ID
    Value: !Ref AuroraCluster
    Export:
      Name: !Sub "TaskManager-${BranchName}-AuroraCluster-${AWS::Region}"

  DatabaseEndpoint:
    Description: Aurora MySQL cluster endpoint
    Value: !GetAtt AuroraCluster.Endpoint.Address
    Export:
      Name: !Sub "TaskManager-${BranchName}-DatabaseEndpoint-${AWS::Region}"

  DatabaseReaderEndpoint:
    Description: Aurora MySQL reader endpoint
    Value: !GetAtt AuroraCluster.ReadEndpoint.Address
    Export:
      Name: !Sub "TaskManager-${BranchName}-DatabaseReaderEndpoint-${AWS::Region}"

  DatabaseSecretArn:
    Description: Database secret ARN
    Value: !Ref DatabaseSecret
    Export:
      Name: !Sub "TaskManager-${BranchName}-DatabaseSecret-${AWS::Region}"

  RDSSecurityGroupId:
    Description: Security group for RDS access
    Value: !Ref RDSSecurityGroup
    Export:
      Name: !Sub "TaskManager-${BranchName}-RDSSecurityGroup-${AWS::Region}"
