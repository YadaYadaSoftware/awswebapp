AWSTemplateFormatVersion: '2010-09-09'
Description: 'TaskManager Web Frontend - Blazor Server ECS Container with Application Load Balancer'

Parameters:
  Environment:
    Type: String
    Default: main
    Description: 'Environment name (typically branch name)'

  GoogleClientId:
    Type: String
    NoEcho: true
    Description: 'Google OAuth Client ID'

  GoogleClientSecret:
    Type: String
    NoEcho: true
    Description: 'Google OAuth Client Secret'

  WebContainerImage:
    Type: String
    Description: 'Container image URI for the web application'

Resources:
  # CloudWatch Log Group for ECS
  WebECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/TaskManagerWeb-${Environment}'
      RetentionInDays: 7

  # Application Load Balancer
  WebLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub 'web-${Environment}'
      Type: application
      Scheme: internet-facing
      SecurityGroups:
        - Fn::ImportValue: 'TaskManager-ALBSecurityGroup'
      Subnets:
        - Fn::ImportValue: 'TaskManager-PublicSubnet1'
        - Fn::ImportValue: 'TaskManager-PublicSubnet2'
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Target Group
  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub 'webtg-${Environment}'
      Protocol: HTTP
      Port: 80
      VpcId:
        Fn::ImportValue: 'TaskManager-VPC'
      TargetType: ip
      HealthCheckPath: /health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  # ALB Listener
  WebListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref WebLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup

  # ECS Task Definition
  WebTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub 'webtd-${Environment}'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn:
        Fn::ImportValue: 'TaskManager-SharedLambdaRole'
      TaskRoleArn:
        Fn::ImportValue: 'TaskManager-SharedLambdaRole'
      ContainerDefinitions:
        - Name: web
          Image: !Ref WebContainerImage
          Essential: true
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          Environment:
            - Name: ASPNETCORE_ENVIRONMENT
              Value: !Ref Environment
            - Name: ConnectionStrings__DefaultConnection
              Value: !Sub
                - 'Host=${DatabaseEndpoint};Database=taskmanager_${DatabaseName};Username=taskmanager_admin;Password=${DatabasePassword}'
                - DatabaseEndpoint:
                    Fn::ImportValue: 'TaskManager-DatabaseEndpoint'
                  DatabaseName: !Sub '${Environment}'
                  DatabasePassword: !Sub '{{resolve:secretsmanager:taskmanager/database/shared:SecretString:password}}'
            - Name: Authentication__Google__ClientId
              Value: !Ref GoogleClientId
            - Name: Authentication__Google__ClientSecret
              Value: !Ref GoogleClientSecret
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WebECSLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  # ECS Service
  WebService:
    Type: AWS::ECS::Service
    DependsOn: WebListener
    Properties:
      ServiceName: !Sub 'websvc-${Environment}'
      Cluster:
        Fn::ImportValue: 'TaskManager-ECSCluster'
      TaskDefinition: !Ref WebTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - Fn::ImportValue: 'TaskManager-ECSTaskSecurityGroup'
          Subnets:
            - Fn::ImportValue: 'TaskManager-PrivateSubnet1'
            - Fn::ImportValue: 'TaskManager-PrivateSubnet2'
      LoadBalancers:
        - TargetGroupArn: !Ref WebTargetGroup
          ContainerName: web
          ContainerPort: 80
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # CloudWatch Alarms for Web
  WebECSServiceAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'TaskManager-Web-Unhealthy-${Environment}'
      AlarmDescription: 'Web ECS service unhealthy targets alarm'
      MetricName: UnHealthyHostCount
      Namespace: AWS/ApplicationELB
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt WebLoadBalancer.LoadBalancerFullName
        - Name: TargetGroup
          Value: !GetAtt WebTargetGroup.TargetGroupFullName

Outputs:
  WebEndpoint:
    Description: 'Web application endpoint URL'
    Value: !Sub 'http://${WebLoadBalancer.DNSName}'

  WebLoadBalancerDNS:
    Description: 'Web Load Balancer DNS name'
    Value: !GetAtt WebLoadBalancer.DNSName


  WebTaskDefinition:
    Description: 'Web ECS task definition'
    Value: !Ref WebTaskDefinition

  WebServiceName:
    Description: 'Web ECS service name'
    Value: !Ref WebService