AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'TaskManager Web Frontend - Blazor Server Lambda Function'

Parameters:
  Environment:
    Type: String
    Default: main
    Description: 'Environment name (typically branch name)'
    
  GoogleClientId:
    Type: String
    NoEcho: true
    Description: 'Google OAuth Client ID'
    
  GoogleClientSecret:
    Type: String
    NoEcho: true
    Description: 'Google OAuth Client Secret'
    
  WebCodeBucket:
    Type: String
    Description: 'S3 bucket name for Web Lambda deployment package'
    
  WebCodeKey:
    Type: String
    Description: 'S3 key for Web Lambda deployment package'
    Default: 'web-lambda-deployment.zip'

Globals:
  Function:
    Runtime: dotnet8
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        ASPNETCORE_ENVIRONMENT: !Ref Environment

Resources:
  # CloudWatch Log Group for Web
  WebLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/TaskManagerWeb-${Environment}'
      RetentionInDays: 7

  # TaskManager Web Function (Blazor Server)
  TaskManagerWebFunction:
    Type: AWS::Serverless::Function
    DependsOn: WebLambdaLogGroup
    Properties:
      FunctionName: !Sub 'TaskManagerWeb-${Environment}'
      CodeUri:
        Bucket: !Ref WebCodeBucket
        Key: !Ref WebCodeKey
      Handler: >-
        TaskManager.Web::TaskManager.Web.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnet8
      PackageType: Zip
      Role: 
        Fn::ImportValue: 'TaskManager-SharedLambdaRole'
      Environment:
        Variables:
          ASPNETCORE_ENVIRONMENT: !Ref Environment
          ConnectionStrings__DefaultConnection: !Sub
            - 'Host=${DatabaseEndpoint};Database=taskmanager_${DatabaseName};Username=taskmanager_admin;Password=${DatabasePassword}'
            - DatabaseEndpoint:
                Fn::ImportValue: 'TaskManager-DatabaseEndpoint'
              DatabaseName: !Sub '${Environment}'
              DatabasePassword: !Sub '{{resolve:secretsmanager:taskmanager/database/shared:SecretString:password}}'
          Authentication__Google__ClientId: !Ref GoogleClientId
          Authentication__Google__ClientSecret: !Ref GoogleClientSecret
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: 'TaskManager-LambdaSecurityGroup'
        SubnetIds:
          - Fn::ImportValue: 'TaskManager-PrivateSubnet1'
          - Fn::ImportValue: 'TaskManager-PrivateSubnet2'
      Events:
        WebRoot:
          Type: Api
          Properties:
            Path: /
            Method: ANY
        WebProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Tags:
        Environment: !Ref Environment

  # CloudWatch Alarms for Web
  WebLambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'TaskManager-Web-Errors-${Environment}'
      AlarmDescription: 'Web Lambda function error rate alarm'
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref TaskManagerWebFunction

Outputs:
  WebEndpoint:
    Description: 'Web application endpoint URL'
    Value: !Sub
      - 'https://${ApiId}.execute-api.${Region}.amazonaws.com/Prod/'
      - ApiId: !Ref ServerlessRestApi
        Region: !Ref AWS::Region

  WebLambdaFunctionName:
    Description: 'Web Lambda function name'
    Value: !Ref TaskManagerWebFunction

  WebApiId:
    Description: 'Web API Gateway ID'
    Value: !Ref ServerlessRestApi