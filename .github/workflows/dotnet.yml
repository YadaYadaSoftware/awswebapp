# TaskManager CI/CD Pipeline - Build, Test, and Deploy to AWS

name: TaskManager CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: prod

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
      
    - name: Publish API for Lambda
      run: dotnet publish src/TaskManager.Api/TaskManager.Api.csproj --configuration Release --output ./publish/api --runtime linux-x64 --self-contained false
      
    - name: Publish Web Application
      run: dotnet publish src/TaskManager.Web/TaskManager.Web.csproj --configuration Release --output ./publish/web
      
    - name: Create Lambda deployment package
      run: |
        cd ./publish/api
        zip -r ../../lambda-deployment.zip .
        
    - name: Upload Lambda package
      uses: actions/upload-artifact@v4
      with:
        name: lambda-package
        path: lambda-deployment.zip
        
    - name: Upload Web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-artifacts
        path: ./publish/web

  deploy:
    name: Deploy to AWS with SAM
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Download Lambda package
      uses: actions/download-artifact@v4
      with:
        name: lambda-package
        path: ./src/TaskManager.Api/
        
    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
        
    - name: Deploy with SAM
      run: |
        cd src/TaskManager.Api
        sam deploy \
          --template-file template.yaml \
          --stack-name taskmanager-${{ env.ENVIRONMENT }} \
          --parameter-overrides \
            Environment=${{ env.ENVIRONMENT }} \
            DatabasePassword=${{ secrets.DATABASE_PASSWORD }} \
            GoogleClientId=${{ secrets.GOOGLE_CLIENT_ID }} \
            GoogleClientSecret=${{ secrets.GOOGLE_CLIENT_SECRET }} \
          --capabilities CAPABILITY_IAM \
          --region ${{ env.AWS_REGION }} \
          --resolve-s3 \
          --no-confirm-changeset
        
    - name: Get API Gateway URL
      run: |
        API_URL=$(aws cloudformation describe-stacks \
          --stack-name taskmanager-${{ env.ENVIRONMENT }} \
          --query 'Stacks[0].Outputs[?OutputKey==`ApiEndpoint`].OutputValue' \
          --output text \
          --region ${{ env.AWS_REGION }})
        echo "ðŸš€ TaskManager deployed to: $API_URL"
