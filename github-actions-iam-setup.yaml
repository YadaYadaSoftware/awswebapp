AWSTemplateFormatVersion: '2010-09-09'
Description: 'TaskManager GitHub Actions IAM User and Permissions Setup'

Parameters:
  UserName:
    Type: String
    Default: 'taskmanager-github-actions'
    Description: 'Name for the GitHub Actions IAM user'

Resources:
  # IAM User for GitHub Actions
  GitHubActionsUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref UserName
      Tags:
        - Key: Purpose
          Value: 'GitHub Actions Deployment'
        - Key: Application
          Value: 'TaskManager'

  # Custom IAM Policy with specific permissions
  TaskManagerDeploymentPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'TaskManagerDeploymentPolicy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Core AWS service permissions
          - Effect: Allow
            Action:
              - cloudformation:*
              - lambda:*
              - apigateway:*
              - rds:*
              - ec2:*
              - secretsmanager:*
              - logs:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - ecs:*
              - ecr:*
              - elasticloadbalancing:*
            Resource: '*'

          # IAM permissions (consolidated)
          - Effect: Allow
            Action:
              - iam:*
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/TaskManager-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/taskmanager-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/TaskManager-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/taskmanager-*'
              - 'arn:aws:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing'
              - 'arn:aws:iam::*:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS'

          # Service-linked role creation
          - Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource: '*'
            Condition:
              StringEquals:
                iam:AWSServiceName:
                  - 'elasticloadbalancing.amazonaws.com'
                  - 'ecs.amazonaws.com'

          # STS permissions
          - Effect: Allow
            Action:
              - sts:GetCallerIdentity
              - sts:AssumeRole
            Resource: '*'
      Users:
        - !Ref GitHubActionsUser

  # Access Key for GitHub Actions
  GitHubActionsAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref GitHubActionsUser

Outputs:
  UserName:
    Description: 'IAM User name for GitHub Actions'
    Value: !Ref GitHubActionsUser
    Export:
      Name: 'TaskManager-GitHubActionsUser'

  AccessKeyId:
    Description: 'Access Key ID for GitHub Actions (add to GitHub secrets)'
    Value: !Ref GitHubActionsAccessKey

  SecretAccessKey:
    Description: 'Secret Access Key for GitHub Actions (add to GitHub secrets)'
    Value: !GetAtt GitHubActionsAccessKey.SecretAccessKey

  UserArn:
    Description: 'IAM User ARN'
    Value: !GetAtt GitHubActionsUser.Arn

  PolicyArn:
    Description: 'Custom policy ARN'
    Value: !Ref TaskManagerDeploymentPolicy

  SetupInstructions:
    Description: 'Instructions for GitHub Secrets setup'
    Value: !Sub |
      Add these to your GitHub repository secrets:
      AWS_ACCESS_KEY_ID=${GitHubActionsAccessKey}
      AWS_SECRET_ACCESS_KEY=${GitHubActionsAccessKey.SecretAccessKey}
      
      Also add:
      DATABASE_PASSWORD=your-secure-password
      GOOGLE_CLIENT_ID=your-google-client-id
      GOOGLE_CLIENT_SECRET=your-google-client-secret